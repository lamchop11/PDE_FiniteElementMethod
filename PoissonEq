# Program 8.5 Finite difference solver for 2D Poisson equation
# with Dirichlet boundary conditions on a rectangle
# Python translation JR 2/25/2012.
# Input: rectangle domain [xl,xr]x[yb,yt] with MxN space steps
# Output: matrix w holding solution values
# Example usage: w = poisson(0,1,1,2,4,4)

'''
u_xx + u_yy = f(x, y) initial condition, f(x,y) = 0 is laplacian, != 0 is poisson
u(x, yb) = g1(x) left
u(x, yt) = g2(x) right
u(xl, y) = g3(y) bottom
u(xr, y) = g4(y) top
'''
import numpy as np
from mpl_toolkits.mplot3d import axes3d, Axes3D
import matplotlib.pyplot as plt
#from mymesh import mymesh
def poisson(xl,xr,yb,yt,M,N):
  def f(x,y): return 0 			# define input function data
  def g1(x) : return np.sin(np.pi * x) 	#left
  def g2(x) : return np.sin(np.pi * x)	# right
  def g3(y) : return 0                  #bottom
  def g4(y) : return 0                  #top
  m = M+1; n = N+1;  mn = m*n
  h = float(xr-xl)/M; h2 = h**2; k = float(yt-yb)/N; k2 = k**2
  x = np.linspace(xl,xr,m) # set mesh values
  y = np.linspace(yb,yt,n)
  A = np.zeros((mn,mn)); b = np.zeros(mn)
  for i in range(1,m-1):  # interior points
    for j in range(1,n-1):
      A[i+j*m,i-1+j*m] = 1./h2
      A[i+j*m,i+1+j*m] = 1./h2
      A[i+j*m,i  +j*m] =-2./h2 - 2./k2
      A[i+j*m,i  +(j-1)*m] = 1./k2
      A[i+j*m,i  +(j+1)*m] = 1./k2
      b[i+j*m] = f(x[i],y[j])

  for i in range(m): 		# bottom and top boundary points
    j = 0  ; A[i+j*m,i+j*m] = 1; b[i+j*m] = g1(x[i])
    j = n-1; A[i+j*m,i+j*m] = 1; b[i+j*m] = g2(x[i])

  for j in range(1,n-1):	# left and right boundary points
    i = 0  ; A[i+j*m,i+j*m] = 1; b[i+j*m] = g3(y[j])
    i = m-1; A[i+j*m,i+j*m] = 1; b[i+j*m] = g4(y[j])
  v = np.linalg.solve(A,b)	# solve for solution in v labeling

  w = np.reshape(v,(m,n),order='F')
  print(w)
  #mymesh(x,y,w.T,'x','y','w')
  #np.set_printoptions(precision=15,linewidth=140)
  [X,T] = np.meshgrid(x,y)			# build the 3-D plot of solution w
  fig = plt.figure()
  ax = fig.add_subplot(111, projection='3d')
  ax.plot_wireframe(X, T, w.T)
  ax.view_init(30, -35)
  ax.set_xlabel('x'); ax.set_ylabel('t'); ax.set_zlabel('w')
  plt.show()

  return "This is w:\n{} ".format(w)
np.set_printoptions(precision=15,linewidth=150)
poisson(0,1,1,2,50,50)
